[ROLE]
Pointer analyzer that analyzes whether two pointer in a program alias
[QUESTION]
Analyze whether pointer expression p and pointer expression q alias in the following program at the position with "------- LABEL 1":
/*
 * Global variables test.
 * Author: Sen Ye
 * Date: 07/05/2014
 */
#include "aliascheck.h"

struct MyStruct {
	char f0[20];
	int f1;
	int* f2;
};

int x, y;
struct MyStruct global = {"abcdefg", 20, &x};

void foo(int** pp, int** qq) {
	*pp = &x;
	*qq = &y;
}

void bar(int** pp, int** qq) {
	*pp = &x;
	*qq = &x;
}

int main() {
	int *p, *q;
	int **pp, **qq;
	pp = &p;
	qq = &q;
	bar(pp,qq);
------- LABEL 1
------- LABEL 2
}

[ANSWER]
Ground Truth: The two pointer expressions MAY alias
LLM Analysis:
1. POINTERS: p,q
2. RESULT: MUST
3. REASON: In the function `bar`, both `*pp` and `*qq` are assigned the address of `x`, making `p` and `q` point to the same memory location.
[QUESTION]
Analyze whether pointer expression global.f2 and pointer expression *qq alias in the following program at the position with "------- LABEL 2":
/*
 * Global variables test.
 * Author: Sen Ye
 * Date: 07/05/2014
 */
#include "aliascheck.h"

struct MyStruct {
	char f0[20];
	int f1;
	int* f2;
};

int x, y;
struct MyStruct global = {"abcdefg", 20, &x};

void foo(int** pp, int** qq) {
	*pp = &x;
	*qq = &y;
}

void bar(int** pp, int** qq) {
	*pp = &x;
	*qq = &x;
}

int main() {
	int *p, *q;
	int **pp, **qq;
	pp = &p;
	qq = &q;
	bar(pp,qq);
------- LABEL 1
------- LABEL 2
}

[ANSWER]
Ground Truth: The two pointer expressions MAY alias
LLM Analysis:
1. POINTERS: global.f2,*qq
2. RESULT: MAY
3. REASON: The function `bar` assigns both `*pp` and `*qq` to point to the address of `x`, which is the same address that `global.f2` points to. Therefore, `*qq` may point to the same location as `global.f2`.
